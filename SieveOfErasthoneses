class Solution{
    static ArrayList<Integer> sieveOfEratosthenes(int n){
        // code here
        boolean a[]=new boolean[n+1];
        Arrays.fill(a,true);
        a[0]=false;
        a[1]=false;
        for(int i=2;i*i<=n;i++)
        {
            if(a[i]==true)
            {
                for(int j=2*i;j<=n;j=j+i)
                 a[j]=false;
            }
        }
        ArrayList<Integer> ans=new ArrayList<>();
        for(int i=2;i<=n;i++)
        {
            if(a[i]==true)
            ans.add(i);
        }
        return ans;
    }
}
/*
Used to find prime number upto n in an efficienet manner
TC:O(N log (log N));
SC:O(n)// for boolean array 
